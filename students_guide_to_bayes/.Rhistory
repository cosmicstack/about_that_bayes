geom_line() +
geom_contour(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 0.001, inherit.aes = FALSE) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 1, inherit.aes = FALSE) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 3, inherit.aes = FALSE) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 5, inherit.aes = FALSE) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 8, inherit.aes = FALSE) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 10, inherit.aes = FALSE) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 10, inherit.aes = FALSE) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour(data = df, aes(X1, X3, z = obj.func.vals), color = "skyblue", binwidth = 10, inherit.aes = FALSE) +
labs(title = "PGD") +
theme_bw()
class(df$obj.func.vals)
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour(data = df, aes(X1, X3, z = obj.func.vals, color = obj.func.vals), binwidth = 10, inherit.aes = FALSE) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour(data = df, aes(X1, X3, z = obj.func.vals, color = after_stat(obj.func.vals)), binwidth = 10, inherit.aes = FALSE) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 10, inherit.aes = FALSE, alpha = 0.1) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 10, inherit.aes = FALSE, alpha = 0.3) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 10, inherit.aes = FALSE, alpha = 0.3) +
labs(title = "PGD") +
legend(NULL) +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(data = df, aes(X1, X3, z = obj.func.vals), binwidth = 10, inherit.aes = FALSE, alpha = 0.3, show.legend = F) +
labs(title = "PGD") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
library(lpSolve)
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.3,
show.legend = F
) +
labs(title = "PGD") +
theme_bw()
data.frame(cbind(X_fw, V4 = obj.func.val)) %>%
ggplot(aes(V1, V3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.3,
show.legend = F
) +
labs(title = "Frank-Wolfe method") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.3,
show.legend = F
) +
geom_contour(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.3,
) +
labs(title = "PGD") +
theme_bw()
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.3,
show.legend = F
) +
geom_contour(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.1,
color = "black"
) +
labs(title = "PGD") +
theme_bw()
data.frame(cbind(X_fw, V4 = obj.func.val)) %>%
ggplot(aes(V1, V3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.3,
show.legend = F
) +
geom_contour(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.1,
color = "black"
) +
labs(title = "Frank-Wolfe method") +
theme_bw()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
library(lpSolve)
library(cowplot)
plot_grid(p1, p2, nrow = 1)
x1 <- seq(0, 1, length = 11)
x2 <- seq(0, 1, length = 11)
x3 <- seq(0, 20, length = 21)
df <- expand.grid(x1, x2, x3) %>%
select(X1 = Var1, X2 = Var2, X3 = Var3)
obj.func.vals <- apply(df, 1, obj.func)
df <- data.frame(df, obj.func.vals)
p1 <- data.frame(cbind(pgd$X, pgd$obj.func.val)) %>%
ggplot(aes(X1, X3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.3,
show.legend = F
) +
geom_contour(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.1,
color = "black"
) +
labs(title = "PGD") +
theme_bw()
p2 <- data.frame(cbind(X_fw, V4 = obj.func.val)) %>%
ggplot(aes(V1, V3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.3,
show.legend = F
) +
geom_contour(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.1,
color = "black"
) +
labs(title = "Frank-Wolfe method") +
theme_bw()
plot_grid(p1, p2, nrow = 1)
p2 <- data.frame(cbind(X_fw, V4 = obj.func.val)) %>%
ggplot(aes(V1, V3)) +
geom_point(color="red", size = 0.2) +
geom_line() +
geom_contour_filled(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.3,
show.legend = F
) +
geom_contour(
data = df,
aes(X1, X3, z = obj.func.vals),
binwidth = 10,
inherit.aes = FALSE,
alpha = 0.1,
color = "black"
) +
labs(title = "Frank-Wolfe method", x = "X1", y = "X3") +
theme_bw()
plot_grid(p1, p2, nrow = 1)
A <- matrix(rnorm(9), nrow = 3, ncol = 3)
Q <- t(A) %*% A
Q
eigen(Q)
R <- 2*Q
eigen(R)
b <- matrix(rnorm(9), nrow = 3, ncol = 3)
R <- t(b) %*% b
Q + R
eigen(Q + R)
eigen(Q)
eigen(R)
X <- matrix(c(3, 1, 1, 3), nrow = 2, ncol = 2, byrow = T)
X
eigen(X)
Q
R
S <- 0.5*(Q+R)
eigen(Q)
eigen(r)
eigen(R)
eigen(S)
setwd("/Users/krishanth/Code/r/students_guide_to_bayes")
library(tidyverse)
# 13.1
# 1
fPriorPredictive <- function(NumSamples, a, b, N) {
draws <- 0
for (i in 1:NumSamples) {
theta <- rbeta(1, a, b)
draws[i] <- rbinom(1, N, theta)
}
draws
}
X <- fPriorPredictive(1000, 1, 1, 100)
hist(X)
mean(X)
# 2
posterior_samples <- rbeta(10000, 7, 95)
posterior_dist <- dbeta(posterior_samples, 7, 95)
ggplot(data.frame(x = 1:10000, y = posterior_samples)) +
geom_density(aes(y)) +
lims(x = c(0, 1))
mean(posterior_samples)
# 3
p <- seq(0, 1, length = 100)
Adist <- dbeta(p, 7, 95)
BSamples <- rbeta(100, 7, 95)
Bdist <- dbeta(BSamples, 7, 95)
ggplot() +
geom_line(data = data.frame(x = p, y = Adist), aes(x, y), color = "red", alpha = 0.5) +
geom_line(data = data.frame(x = BSamples, y = Bdist), aes(x, y), color = "blue", alpha = 0.5)
# 4
true_mean <- 7/102
sample_mean <-  matrix(NA, nrow = 100, ncol = 1000)
for (i in 1:1000) {
for (j in 1:100) {
X <- rbeta(i, 7, 95)
sample_mean[j, i] <- mean(X)
}
}
data.frame(sample_mean) %>%
pivot_longer(cols=starts_with("X"), names_to = "sample_size", names_prefix = "X", values_to = "mean") %>%
ggplot() +
geom_boxplot(aes(sample_size, mean), fill = "white", outliers = FALSE) +
scale_x_discrete(breaks = seq(1, 1000, 100), labels = seq(1, 1000, 100))
errorEst <- abs(sample_mean - true_mean)
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_line(aes(x, y))
tmp <- rbeta(1, 1)
tmp <- rbeta(1, 1, 1)
pbeta(tmp, 1, 1)
pbeta(tmp, 1, 1, lower.tail = F)
dbeta(tmp, 1, 1)
qbeta(tmp, 1, 1)
tmp <- rbeta(1, 7, 95)
pbeta(tmp, 7, 95)
qbeta(tmp, 7, 95)
dbeta(tmp, 7, 95)
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_smooth(aes(x, y))
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_point(aes(x,y)) +
geom_smooth(aes(x, y))
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_point(aes(x,y)) +
geom_smooth(aes(x, y), span = 0.6)
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_point(aes(x,y)) +
geom_smooth(aes(x, y), span = 6)
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_point(aes(x,y)) +
geom_smooth(aes(x, y), formula = y ~ splines::bs(x, 3))
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_point(aes(x,y)) +
geom_smooth(aes(x, y), formula = y ~ splines::bs(x, 2))
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_point(aes(x,y)) +
geom_smooth(aes(x, y), formula = y ~ splines::bs(x, 4))
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_point(aes(x,y)) +
geom_smooth(aes(x, y), formula = y ~ splines::bs(x, 7))
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_point(aes(x,y)) +
geom_smooth(aes(x, y), formula = y ~ splines::bs(x, 6))
ggplot(data.frame(x = 1:1000, y = apply(errorEst, 2, sd))) +
geom_point(aes(x,y)) +
geom_smooth(aes(x, y))
# 5
tru_var <- 7*95/((7+95)^2*(7+95+1))
sampled_var <- matrix(NA, nrow = 100, ncol = 1000)
for (i in 1:1000) {
X <- rbeta(100, 7, 95)
sampled_var[, i] <- X
}
dim(sampled_var)
t(sampled_var)
apply(sampled_var, 2, var)
vars <- apply(sampled_var, 2, var)
ggplot(data.frame(sample = 1:1000, variance = vars)) +
geom_point(aes(sample, variance)) +
geom_hline(yintercept = tru_var)
mean(vars)
tru_var
ggplot(data.frame(variance = vars)) +
geom_histogram(aes(variance)) +
geom_vline(xintercept = tru_var)
